{"ast":null,"code":"import _slicedToArray from \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/Send.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nconst Send = () => {\n  const pactContext = useContext(PactContext);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        recp = _useState2[0],\n        setRecp = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        amount = _useState4[0],\n        setAmount = _useState4[1];\n\n  const send = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Message, {\n      color: \"yellow\",\n      style: {\n        marginLeft: 100,\n        marginRight: 100,\n        marginTop: 30,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginTop: 20,\n        fontSize: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Send BiLira (STS) to a different account\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Be sure of the receiver as blockchain transactions cannot be reversed\")), React.createElement(Form.Field, {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: \"20px\",\n        marginBottom: 20,\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#054F9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Recepient Public Key\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"What is Public Key? \"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Public Key is the unique sequence of characters that you use to identify a BiLira account. NOTE: if you send to the wrong existing account it can be IRREVERSIBLE\"))), React.createElement(Form.Input, {\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"Recepient\",\n      value: recp,\n      error: recp.length !== 64,\n      disabled: pactContext.loading,\n      onChange: e => setRecp(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: \"0px\",\n        marginBottom: 20,\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#054F9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"(STS) Amount to Send\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"What is Amount to Send? \"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Quantity of BiLira you would like to send to specified recepient\"))), React.createElement(Form.Input, {\n      icon: \"dollar sign\",\n      iconPosition: \"left\",\n      placeholder: \"Amount (STS)\",\n      value: amount,\n      disabled: pactContext.loading,\n      onChange: e => setAmount(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), parseFloat(amount) ? \"~$\".concat((parseFloat(amount) * 0.63).toFixed(2)) : amount === \"\" ? \"\" : \"please enter a digit\"), React.createElement(Form.Field, {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: \"0px\",\n        marginBottom: 30,\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, pactContext.loading ? React.createElement(TXStatus, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : React.createElement(Button, {\n      style: {\n        backgroundColor: \"#054F9E\",\n        color: \"white\",\n        marginBottom: 10,\n        marginTop: 20,\n        width: 340\n      },\n      onClick: () => pactContext.transfer(recp, amount),\n      disabled: !pactContext.accountName || amount === \"\" || isNaN(amount) || recp.length === 64,\n      loading: pactContext.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Send\"))));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, send());\n};\n\nexport default Send;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/Send.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","Menu","PactContext","Send","pactContext","recp","setRecp","amount","setAmount","send","marginLeft","marginRight","marginTop","textAlign","fontSize","marginBottom","color","length","loading","e","target","value","parseFloat","toFixed","backgroundColor","width","transfer","accountName","isNaN"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nconst Send = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const [recp, setRecp] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n\n  const send = () => {\n    return (\n      <div>\n        <Form>\n          <Message color=\"yellow\" style={{marginLeft: 100, marginRight: 100, marginTop: 30, textAlign: 'center'}}>\n            <Message.Header style={{marginTop: 20, fontSize: 16}}>\n              Send BiLira (STS) to a different account\n            </Message.Header>\n            <div style={{marginBottom: 5, marginTop: 10}}>\n              Be sure of the receiver as blockchain transactions cannot be reversed\n            </div>\n          </Message>\n          <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"20px\", marginBottom: 20, textAlign: \"left\"}} >\n            <label style={{color: \"#054F9E\" }}>Recepient Public Key\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n              <Popup.Header>What is Public Key? </Popup.Header>\n              <Popup.Content>Public Key is the unique sequence of characters that you use to identify a BiLira account. NOTE: if you send to the wrong existing account it can be IRREVERSIBLE</Popup.Content>\n              </Popup>\n            </label>\n              <Form.Input\n                icon='user'\n                iconPosition='left'\n                placeholder='Recepient'\n                value={recp}\n                error={recp.length !== 64}\n                disabled={pactContext.loading}\n                onChange={(e) => setRecp(e.target.value)}\n              />\n          </Form.Field>\n          <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"0px\", marginBottom: 20, textAlign: \"left\"}} >\n            <label style={{color: \"#054F9E\" }}>(STS) Amount to Send\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n                <Popup.Header>What is Amount to Send? </Popup.Header>\n                <Popup.Content>Quantity of BiLira you would like to send to specified recepient</Popup.Content>\n              </Popup>\n            </label>\n              <Form.Input\n                icon='dollar sign'\n                iconPosition='left'\n                placeholder='Amount (STS)'\n                value={amount}\n                disabled={pactContext.loading}\n                onChange={(e) => setAmount(e.target.value)}\n              />\n              {(parseFloat(amount)\n                ?\n                  `~$${(parseFloat(amount) * 0.63).toFixed(2)}`\n                :\n                  (amount === \"\"\n                    ?\n                      \"\"\n                    :\n                      \"please enter a digit\"\n                  )\n              )}\n          </Form.Field>\n          <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"0px\", marginBottom: 30, textAlign: \"center\"}} >\n            {(pactContext.loading\n            ?\n              <TXStatus />\n            :\n              <Button\n                  style={{\n                    backgroundColor: \"#054F9E\",\n                    color: \"white\",\n                    marginBottom: 10,\n                    marginTop: 20,\n                    width: 340,\n                    }}\n                  onClick={() => pactContext.transfer(recp, amount)}\n                  disabled={!pactContext.accountName || amount === \"\" || isNaN(amount) || recp.length === 64}\n                  loading={pactContext.loading}\n                >\n                Send\n              </Button>\n            )}\n          </Form.Field>\n        </Form>\n\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {send()}\n    </div>\n  );\n\n}\n\nexport default Send;\n"]},"metadata":{},"sourceType":"module"}