{"ast":null,"code":"import _slicedToArray from \"/Users/francescomelpignano/Desktop/kadena/code/bilira-demo/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/bilira-demo/frontend/src/components/Guide.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nconst Guide = () => {\n  const pactContext = useContext(PactContext);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        recp = _useState2[0],\n        setRecp = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        amount = _useState4[0],\n        setAmount = _useState4[1];\n\n  const _useState5 = useState('gen'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        action = _useState6[0],\n        setAction = _useState6[1];\n\n  const guide = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Message, {\n      color: \"blue\",\n      style: {\n        marginLeft: 100,\n        marginRight: 100,\n        marginTop: 20,\n        marginBottom: 40,\n        textAlign: 'left'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Message.Header, {\n      style: {\n        marginTop: 20,\n        fontSize: 25,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"BiLira (TRYB) with Kadena\"), React.createElement(Message.Header, {\n      style: {\n        marginTop: 20,\n        fontSize: 16,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"CHAINWEAVER wallet\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"1. Visit \", React.createElement(\"a\", {\n      href: \"https://www.kadena.io/chainweaver\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"this page\"), \" and download Chainweaver for your OS\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"2. Generate a keypair in the 'Keys' tab\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"3. Copy and paste the generated public key into the 'Create Account' tab\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 20,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"4. To make transfers use the 'sign with wallet' option (make sure to have Chainweaver open)\"), React.createElement(Message.Header, {\n      style: {\n        marginTop: 20,\n        fontSize: 16,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"PLAIN KEYPAIR (public + private keys)\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"1. Provide your own public key or click 'Generate and Download Keypair' in the 'Create Account' tab\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"2. Use the 'Sign with Private Key' option and paste your private key to sign transactions\"), React.createElement(Message.Header, {\n      style: {\n        marginTop: 20,\n        fontSize: 16,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"TESTNET\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"1. Follow the above instructions for usage\"), React.createElement(\"div\", {\n      style: {\n        marginBottom: 5,\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"2. Freely use the 'Buy' section to mint tokens without charge\"), React.createElement(Message.Header, {\n      style: {\n        marginTop: 20,\n        marginBottom: 20,\n        fontSize: 12,\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"NOTE: you will never have to pay gas to use BiLira (TRYB) with Kadena because of our unique implementation of gas stations. You DO NOT need to be onboarded to cryptocurrencies to use this platform!\")));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, guide());\n};\n\nexport default Guide;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/bilira-demo/frontend/src/components/Guide.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","Menu","PactContext","Guide","pactContext","recp","setRecp","amount","setAmount","action","setAction","guide","marginLeft","marginRight","marginTop","marginBottom","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nconst Guide = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const [recp, setRecp] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n\n  const [action, setAction] = useState('gen')\n\n  const guide = () => {\n    return (\n      <div>\n      <Message color=\"blue\" style={{marginLeft: 100, marginRight: 100, marginTop: 20, marginBottom: 40, textAlign: 'left'}}>\n        <Message.Header style={{marginTop: 20, fontSize: 25, textAlign: 'center'}}>\n          BiLira (TRYB) with Kadena\n        </Message.Header>\n        <Message.Header style={{marginTop: 20, fontSize: 16, textAlign: 'center'}}>\n          CHAINWEAVER wallet\n        </Message.Header>\n        <div style={{marginBottom: 5, marginTop: 10}}>\n          1. Visit <a href=\"https://www.kadena.io/chainweaver\">this page</a> and download Chainweaver for your OS\n        </div>\n        <div style={{marginBottom: 5, marginTop: 10}}>\n          2. Generate a keypair in the 'Keys' tab\n        </div>\n        <div style={{marginBottom: 5, marginTop: 10}}>\n          3. Copy and paste the generated public key into the 'Create Account' tab\n        </div>\n        <div style={{marginBottom: 20, marginTop: 10}}>\n          4. To make transfers use the 'sign with wallet' option (make sure to have Chainweaver open)\n        </div>\n        <Message.Header style={{marginTop: 20, fontSize: 16, textAlign: 'center'}}>\n          PLAIN KEYPAIR (public + private keys)\n        </Message.Header>\n        <div style={{marginBottom: 5, marginTop: 10}}>\n          1. Provide your own public key or click 'Generate and Download Keypair' in the 'Create Account' tab\n        </div>\n        <div style={{marginBottom: 5, marginTop: 10}}>\n          2. Use the 'Sign with Private Key' option and paste your private key to sign transactions\n        </div>\n        <Message.Header style={{marginTop: 20, fontSize: 16, textAlign: 'center'}}>\n          TESTNET\n        </Message.Header>\n        <div style={{marginBottom: 5, marginTop: 10}}>\n          1. Follow the above instructions for usage\n        </div>\n        <div style={{marginBottom: 5, marginTop: 10}}>\n          2. Freely use the 'Buy' section to mint tokens without charge\n        </div>\n        <Message.Header style={{marginTop: 20, marginBottom: 20, fontSize: 12, textAlign: 'center'}}>\n          NOTE: you will never have to pay gas to use BiLira (TRYB) with Kadena because of our unique implementation of gas stations. You DO NOT need to be onboarded to cryptocurrencies to use this platform!\n        </Message.Header>\n      </Message>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {guide()}\n    </div>\n  );\n\n}\n\nexport default Guide;\n"]},"metadata":{},"sourceType":"module"}