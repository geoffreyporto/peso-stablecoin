{"ast":null,"code":"import _slicedToArray from \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/User.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport Send from './Send';\nimport Sell from './Sell';\nimport PactContext from \"../contexts/PactContext\";\n\nconst User = () => {\n  const pactContext = useContext(PactContext);\n\n  const pactFecth = async () => {\n    await pactContext.getCoinBalance();\n  };\n\n  const _useState = useState('send'),\n        _useState2 = _slicedToArray(_useState, 2),\n        action = _useState2[0],\n        setAction = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        amount = _useState4[0],\n        setAmount = _useState4[1];\n\n  const redeem = () => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: \"20px\",\n        marginBottom: 20,\n        textAlign: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        color: \"#054F9E\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Amount STX to Redeem\", React.createElement(Popup, {\n      trigger: React.createElement(Icon, {\n        name: \"help circle\",\n        style: {\n          \"marginLeft\": \"2px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }),\n      position: \"top center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Popup.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"What is Amount to Redeem? \"), React.createElement(Popup.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Turn your tokenized silver back into a physical asset\"))), React.createElement(Form.Input, {\n      icon: \"dollar sign\",\n      iconPosition: \"left\",\n      placeholder: \"Amount\" // value={amountBuy}\n      // onChange={(e) => setAmountBuy(e.target.value)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      style: {\n        marginLeft: 50,\n        marginRight: 50,\n        marginTop: \"0px\",\n        marginBottom: 30,\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Button, {\n      style: {\n        backgroundColor: \"#054F9E\",\n        color: \"white\",\n        marginBottom: 10,\n        marginTop: 20,\n        width: 340\n      } // onClick={() => pactFecth()}\n      // disabled={!pactContext.accountName}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Redeem\"))));\n  };\n\n  return React.createElement(\"div\", {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginLeft: 50,\n      marginRight: 50,\n      marginTop: \"20px\",\n      marginBottom: 30,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#054F9E\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Enter Your Public Key\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"What is a Public Key? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Account Name is the unique sequence of characters that you use to identify yourself in chainweb. You'll be asked to sign with associated key/keys when you make transactions. Account names need to be unique and are assosciated to keypairs that can sign its transactions. The simplest way would be to use your public key as your account name\"))), React.createElement(Form.Input, {\n    icon: \"key\",\n    iconPosition: \"left\",\n    placeholder: \"Account Name\",\n    value: pactContext.accountName,\n    onChange: e => pactContext.setAccountName(e.target.value),\n    action: React.createElement(Button, {\n      color: \"grey\",\n      onClick: () => pactContext.getCoinBalance(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \"refresh\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }))), React.createElement(Message, {\n    color: \"blue\",\n    style: {\n      marginLeft: 100,\n      marginRight: 100,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Balance: \", pactContext.coinBalance, \" STX\")), React.createElement(\"div\", {\n    style: {\n      marginLeft: 50,\n      marginRight: 50,\n      marginTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    color: \"blue\",\n    widths: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    name: \"buy\",\n    active: action === 'buy',\n    onClick: () => setAction('buy'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Buy\"), React.createElement(Menu.Item, {\n    name: \"redeem\",\n    active: action === 'redeem',\n    onClick: () => setAction('redeem'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Sell\"), React.createElement(Menu.Item, {\n    name: \"send\",\n    active: action === 'send',\n    onClick: () => setAction('send'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Send\"))), action === 'send' ? React.createElement(Send, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }) : React.createElement(Sell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }));\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/User.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","Menu","Send","Sell","PactContext","User","pactContext","pactFecth","getCoinBalance","action","setAction","amount","setAmount","redeem","marginLeft","marginRight","marginTop","marginBottom","textAlign","color","backgroundColor","width","accountName","e","setAccountName","target","value","coinBalance"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport Send from './Send';\nimport Sell from './Sell';\nimport PactContext from \"../contexts/PactContext\";\n\nconst User = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const pactFecth = async () => {\n    await pactContext.getCoinBalance();\n  }\n\n  const [action, setAction] = useState('send')\n  const [amount, setAmount] = useState(\"\")\n\n\n  const redeem = () => {\n    return (\n      <div>\n        <Form>\n          <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"20px\", marginBottom: 20, textAlign: \"left\"}} >\n            <label style={{color: \"#054F9E\" }}>Amount STX to Redeem\n              <Popup\n                trigger={\n                  <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n                }\n                position='top center'\n              >\n                <Popup.Header>What is Amount to Redeem? </Popup.Header>\n                <Popup.Content>Turn your tokenized silver back into a physical asset</Popup.Content>\n              </Popup>\n            </label>\n              <Form.Input\n                icon='dollar sign'\n                iconPosition='left'\n                placeholder='Amount'\n                // value={amountBuy}\n                // onChange={(e) => setAmountBuy(e.target.value)}\n              />\n          </Form.Field>\n          <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"0px\", marginBottom: 30, textAlign: \"center\"}} >\n          <Button\n              style={{\n                backgroundColor: \"#054F9E\",\n                color: \"white\",\n                marginBottom: 10,\n                marginTop: 20,\n                width: 340,\n                }}\n              // onClick={() => pactFecth()}\n              // disabled={!pactContext.accountName}\n            >\n            Redeem\n          </Button>\n          </Form.Field>\n        </Form>\n      </div>\n    )\n  }\n\n  return (\n    <div style={{}}>\n    <Form>\n      <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"20px\", marginBottom: 30, textAlign: \"left\"}} >\n        <label style={{color: \"#054F9E\" }}>Enter Your Public Key\n          <Popup\n            trigger={\n              <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n            }\n            position='top center'\n          >\n          <Popup.Header>What is a Public Key? </Popup.Header>\n          <Popup.Content>Account Name is the unique sequence of characters that you use to identify yourself in chainweb. You'll be asked to sign with associated key/keys when you make transactions. Account names need to be unique and are assosciated to keypairs that can sign its transactions. The simplest way would be to use your public key as your account name</Popup.Content>\n          </Popup>\n        </label>\n          <Form.Input\n            icon='key'\n            iconPosition='left'\n            placeholder='Account Name'\n            value={pactContext.accountName}\n            onChange={(e) => pactContext.setAccountName(e.target.value)}\n            action={\n               <Button\n               color='grey'\n               onClick={() => pactContext.getCoinBalance()}\n               >\n                <Icon name=\"redo\"/>\n                refresh\n               </Button>\n             }\n          />\n      </Form.Field>\n    </Form>\n    <Message color=\"blue\" style={{marginLeft: 100, marginRight: 100, textAlign:'center'}}>\n      <Message.Header>\n        Balance: {pactContext.coinBalance} STX\n      </Message.Header>\n    </Message>\n    <div style={{marginLeft: 50, marginRight: 50, marginTop: 40}}>\n    <Menu color=\"blue\" widths={3} >\n          <Menu.Item\n            name='buy'\n            active={action === 'buy'}\n            onClick={() => setAction('buy')}\n          >\n            Buy\n          </Menu.Item>\n\n          <Menu.Item\n            name='redeem'\n            active={action === 'redeem'}\n            onClick={() => setAction('redeem')}\n          >\n            Sell\n          </Menu.Item>\n\n          <Menu.Item\n            name='send'\n            active={action === 'send'}\n            onClick={() => setAction('send')}\n          >\n            Send\n          </Menu.Item>\n\n        </Menu>\n      </div>\n      {(action === 'send'\n      ?\n        <Send />\n      :\n        <Sell />\n      )}\n    </div>\n  );\n\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}