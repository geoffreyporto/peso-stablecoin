{"ast":null,"code":"/**\nFRONTEND CONFIG for blockchain calls to kadena chainweb\nuse frontend to toggle testnet / mainnet\n(backend and contract config ../../pact/config.js)\n**/\n//networkId\n//for mainnet change to:\n//    var networkId = \"mainnet01\"\nvar networkId = \"testnet04\"; //chainweb node\n//for mainnet change to:\n//     var node = 'us-e1'\n\nvar node = 'us1.testnet'; //target chain for contract\n\nvar chainId = \"3\"; //api host to send requests\n\nvar host = \"https://\".concat(node, \".chainweb.com/chainweb/0.0/\").concat(networkId, \"/chain/\").concat(chainId, \"/pact\"); //creation time for request\n\nvar creationTime = () => Math.round(new Date().getTime() / 1000) - 15; //meta data for blockchian transaction on kadena chainweb\n\n\nvar meta = {\n  networkId: networkId,\n  chainId: chainId,\n  host: host,\n  creationTime: creationTime,\n  //gas price at lowest possible denomination\n  gasPrice: 0.00000000001,\n  //high gas limit for tx\n  gasLimit: 10000,\n  //time a tx lives in mempool since creationTime\n  ttl: 28800,\n  //gas payer of the transaction\n  //  set to our gas station account defined in st-gas-station.pact\n  sender: \"bilira-free-gas\",\n  //nonce here doesnt matter since the tx will never have the same hash\n  nonce: \"some nonce that doesnt matter\"\n};\nmodule.exports = {\n  meta: meta\n};","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/bilira-demo/frontend/src/var/config.js"],"names":["networkId","node","chainId","host","creationTime","Math","round","Date","getTime","meta","gasPrice","gasLimit","ttl","sender","nonce","module","exports"],"mappings":"AAAA;;;;;AAMA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,WAAhB,C,CAEA;AACA;AACA;;AACA,IAAIC,IAAI,GAAG,aAAX,C,CAEA;;AACA,IAAIC,OAAO,GAAG,GAAd,C,CAEA;;AACA,IAAIC,IAAI,qBAAcF,IAAd,wCAAgDD,SAAhD,oBAAmEE,OAAnE,UAAR,C,CAEA;;AACA,IAAIE,YAAY,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAY,IAAIC,IAAJ,EAAD,CAAWC,OAAX,KAAqB,IAAhC,IAAsC,EAA/D,C,CAGA;;;AACA,IAAIC,IAAI,GAAG;AACTT,EAAAA,SAAS,EAAEA,SADF;AAETE,EAAAA,OAAO,EAAEA,OAFA;AAGTC,EAAAA,IAAI,EAAEA,IAHG;AAITC,EAAAA,YAAY,EAAEA,YAJL;AAKT;AACAM,EAAAA,QAAQ,EAAE,aAND;AAOT;AACAC,EAAAA,QAAQ,EAAE,KARD;AAST;AACAC,EAAAA,GAAG,EAAE,KAVI;AAWT;AACA;AACAC,EAAAA,MAAM,EAAE,iBAbC;AAcT;AACAC,EAAAA,KAAK,EAAE;AAfE,CAAX;AAkBAC,MAAM,CAACC,OAAP,GAAiB;AACfP,EAAAA,IAAI,EAAEA;AADS,CAAjB","sourcesContent":["/**\nFRONTEND CONFIG for blockchain calls to kadena chainweb\nuse frontend to toggle testnet / mainnet\n(backend and contract config ../../pact/config.js)\n**/\n\n//networkId\n//for mainnet change to:\n//    var networkId = \"mainnet01\"\nvar networkId = \"testnet04\"\n\n//chainweb node\n//for mainnet change to:\n//     var node = 'us-e1'\nvar node = 'us1.testnet'\n\n//target chain for contract\nvar chainId = \"3\"\n\n//api host to send requests\nvar host = `https://${node}.chainweb.com/chainweb/0.0/${networkId}/chain/${chainId}/pact`\n\n//creation time for request\nvar creationTime = () => Math.round((new Date).getTime()/1000)-15\n\n\n//meta data for blockchian transaction on kadena chainweb\nvar meta = {\n  networkId: networkId,\n  chainId: chainId,\n  host: host,\n  creationTime: creationTime,\n  //gas price at lowest possible denomination\n  gasPrice: 0.00000000001,\n  //high gas limit for tx\n  gasLimit: 10000,\n  //time a tx lives in mempool since creationTime\n  ttl: 28800,\n  //gas payer of the transaction\n  //  set to our gas station account defined in st-gas-station.pact\n  sender: \"bilira-free-gas\",\n  //nonce here doesnt matter since the tx will never have the same hash\n  nonce: \"some nonce that doesnt matter\",\n}\n\nmodule.exports = {\n  meta: meta\n}\n"]},"metadata":{},"sourceType":"module"}