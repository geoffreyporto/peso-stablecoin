{"ast":null,"code":"import _slicedToArray from \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/User.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nconst User = () => {\n  const pactContext = useContext(PactContext);\n\n  const pactFecth = async () => {\n    await pactContext.getCoinBalance();\n    await pactContext.getCWBalance();\n    await pactContext.getKuroBalance();\n  };\n\n  const _useState = useState('send'),\n        _useState2 = _slicedToArray(_useState, 2),\n        action = _useState2[0],\n        setAction = _useState2[1];\n\n  return React.createElement(\"div\", {\n    style: {\n      height: document.documentElement.offsetHeight - 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginLeft: 50,\n      marginRight: 50,\n      marginTop: \"20px\",\n      marginBottom: 30,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#054F9E\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Enter Your Account Name\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"What is Account Name? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Account Name is the unique sequence of characters that you use to identify yourself in chainweb. You'll be asked to sign with associated key/keys when you make transactions. Account names need to be unique and are assosciated to keypairs that can sign its transactions. The simplest way would be to use your public key as your account name\"))), React.createElement(Form.Input, {\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Account Name\",\n    value: pactContext.accountName,\n    onChange: e => pactContext.setAccountName(e.target.value),\n    action: React.createElement(Button, {\n      color: \"blue\",\n      onClick: () => pactFecth(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"refresh\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(Message, {\n    color: \"grey\",\n    style: {\n      marginLeft: 100,\n      marginRight: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"BiLira Balance:\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, pactContext.coinBalance)), React.createElement(Menu, {\n    color: \"blue\",\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    name: \"send\",\n    active: action === 'send',\n    onClick: () => setAction('send'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Send\"), React.createElement(Menu.Item, {\n    name: \"redeem\",\n    active: action === 'redeem',\n    onClick: () => setAction('redeem'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Redeem\")));\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/User.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","Menu","PactContext","User","pactContext","pactFecth","getCoinBalance","getCWBalance","getKuroBalance","action","setAction","height","document","documentElement","offsetHeight","marginLeft","marginRight","marginTop","marginBottom","textAlign","color","accountName","e","setAccountName","target","value","coinBalance"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport PactContext from \"../contexts/PactContext\";\n\nconst User = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const pactFecth = async () => {\n    await pactContext.getCoinBalance();\n    await pactContext.getCWBalance();\n    await pactContext.getKuroBalance();\n  }\n\n  const [action, setAction] = useState('send')\n\n  return (\n    <div style={{height: document.documentElement.offsetHeight - 100}}>\n    <Form>\n      <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"20px\", marginBottom: 30, textAlign: \"left\"}} >\n        <label style={{color: \"#054F9E\" }}>Enter Your Account Name\n          <Popup\n            trigger={\n              <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n            }\n            position='top center'\n          >\n          <Popup.Header>What is Account Name? </Popup.Header>\n          <Popup.Content>Account Name is the unique sequence of characters that you use to identify yourself in chainweb. You'll be asked to sign with associated key/keys when you make transactions. Account names need to be unique and are assosciated to keypairs that can sign its transactions. The simplest way would be to use your public key as your account name</Popup.Content>\n          </Popup>\n        </label>\n          <Form.Input\n            icon='user'\n            iconPosition='left'\n            placeholder='Account Name'\n            value={pactContext.accountName}\n            onChange={(e) => pactContext.setAccountName(e.target.value)}\n            action={\n               <Button\n               color='blue'\n               onClick={() => pactFecth()}\n               >\n                <Icon name=\"redo\"/>\n                refresh\n               </Button>\n             }\n          />\n      </Form.Field>\n    </Form>\n    <Message color=\"grey\" style={{marginLeft: 100, marginRight: 100}}>\n      <Message.Header>\n        BiLira Balance:\n      </Message.Header>\n      <div>\n        {pactContext.coinBalance}\n      </div>\n    </Message>\n    <Menu color=\"blue\" widths={2}>\n          <Menu.Item\n            name='send'\n            active={action === 'send'}\n            onClick={() => setAction('send')}\n          >\n            Send\n          </Menu.Item>\n\n          <Menu.Item\n            name='redeem'\n            active={action === 'redeem'}\n            onClick={() => setAction('redeem')}\n          >\n            Redeem\n          </Menu.Item>\n\n        </Menu>\n    </div>\n  );\n\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}