{"ast":null,"code":"import _slicedToArray from \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/User.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport logo from \"../logo.svg\";\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List, Modal, Header, Message, Popup, Select, Radio, Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport Send from './Send';\nimport Sell from './Sell';\nimport PactContext from \"../contexts/PactContext\";\n\nconst User = () => {\n  const pactContext = useContext(PactContext);\n\n  const pactFecth = async () => {\n    await pactContext.getCoinBalance();\n  };\n\n  const _useState = useState('send'),\n        _useState2 = _slicedToArray(_useState, 2),\n        action = _useState2[0],\n        setAction = _useState2[1];\n\n  return React.createElement(\"div\", {\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    style: {\n      marginLeft: 50,\n      marginRight: 50,\n      marginTop: \"20px\",\n      marginBottom: 30,\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    style: {\n      color: \"#054F9E\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Enter Your Public Key\", React.createElement(Popup, {\n    trigger: React.createElement(Icon, {\n      name: \"help circle\",\n      style: {\n        \"marginLeft\": \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }),\n    position: \"top center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Popup.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"What is a Public Key? \"), React.createElement(Popup.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Account Name is the unique sequence of characters that you use to identify yourself in chainweb. You'll be asked to sign with associated key/keys when you make transactions. Account names need to be unique and are assosciated to keypairs that can sign its transactions. The simplest way would be to use your public key as your account name\"))), React.createElement(Form.Input, {\n    icon: \"key\",\n    iconPosition: \"left\",\n    placeholder: \"Account Name\",\n    value: pactContext.accountName,\n    onChange: e => pactContext.setAccountName(e.target.value),\n    action: React.createElement(Button, {\n      color: \"grey\",\n      onClick: () => pactContext.getCoinBalance(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"redo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), \"refresh\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))), React.createElement(Message, {\n    color: \"blue\",\n    style: {\n      marginLeft: 100,\n      marginRight: 100,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Message.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Balance: \", pactContext.coinBalance, \" STX\")), React.createElement(\"div\", {\n    style: {\n      marginLeft: 50,\n      marginRight: 50,\n      marginTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    color: \"blue\",\n    widths: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    name: \"buy\",\n    active: action === 'buy',\n    onClick: () => setAction('buy'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"cart arrow down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"Buy\"), React.createElement(Menu.Item, {\n    name: \"redeem\",\n    active: action === 'redeem',\n    onClick: () => setAction('redeem'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"arrow right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \"Sell\"), React.createElement(Menu.Item, {\n    name: \"send\",\n    active: action === 'send',\n    onClick: () => setAction('send'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"exchange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \"Send\"))), action === 'send' ? React.createElement(Send, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }) : React.createElement(Sell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n};\n\nexport default User;","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/silver-token/frontend/src/components/User.js"],"names":["React","useState","useEffect","useContext","Button","Grid","Input","Icon","Form","List","Modal","Header","Message","Popup","Select","Radio","Tab","TextArea","Loader","Menu","Send","Sell","PactContext","User","pactContext","pactFecth","getCoinBalance","action","setAction","marginLeft","marginRight","marginTop","marginBottom","textAlign","color","accountName","e","setAccountName","target","value","coinBalance"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;;AAEA,OAAO,YAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0CC,IAA1C,EACGC,KADH,EACUC,MADV,EACkBC,OADlB,EAC2BC,KAD3B,EACkCC,MADlC,EAC0CC,KAD1C,EAEGC,GAFH,EAEQC,QAFR,EAEkBC,MAFlB,EAE0BC,IAF1B,QAEsC,mBAFtC;AAGA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAEjB,QAAMC,WAAW,GAAGrB,UAAU,CAACmB,WAAD,CAA9B;;AAEA,QAAMG,SAAS,GAAG,YAAY;AAC5B,UAAMD,WAAW,CAACE,cAAZ,EAAN;AACD,GAFD;;AAJiB,oBAQWzB,QAAQ,CAAC,MAAD,CARnB;AAAA;AAAA,QAQV0B,MARU;AAAA,QAQFC,SARE;;AAUjB,SACE;AAAK,IAAA,KAAK,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAa,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAE,EAAb;AAAiBC,MAAAA,WAAW,EAAE,EAA9B;AAAkCC,MAAAA,SAAS,EAAE,MAA7C;AAAqDC,MAAAA,YAAY,EAAE,EAAnE;AAAuEC,MAAAA,SAAS,EAAE;AAAlF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE,oBAAC,KAAD;AACE,IAAA,OAAO,EACL,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,KAAK,EAAE;AAAC,sBAAc;AAAf,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIE,IAAA,QAAQ,EAAC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BANA,EAOA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2VAPA,CADF,CADF,EAYI,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,YAAY,EAAC,MAFf;AAGE,IAAA,WAAW,EAAC,cAHd;AAIE,IAAA,KAAK,EAAEV,WAAW,CAACW,WAJrB;AAKE,IAAA,QAAQ,EAAGC,CAAD,IAAOZ,WAAW,CAACa,cAAZ,CAA2BD,CAAC,CAACE,MAAF,CAASC,KAApC,CALnB;AAME,IAAA,MAAM,EACH,oBAAC,MAAD;AACA,MAAA,KAAK,EAAC,MADN;AAEA,MAAA,OAAO,EAAE,MAAMf,WAAW,CAACE,cAAZ,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,YAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF,CADA,EAgCA,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAACG,MAAAA,UAAU,EAAE,GAAb;AAAkBC,MAAAA,WAAW,EAAE,GAA/B;AAAoCG,MAAAA,SAAS,EAAC;AAA9C,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYT,WAAW,CAACgB,WADxB,SADF,CAhCA,EAqCA;AAAK,IAAA,KAAK,EAAE;AAACX,MAAAA,UAAU,EAAE,EAAb;AAAiBC,MAAAA,WAAW,EAAE,EAA9B;AAAkCC,MAAAA,SAAS,EAAE;AAA7C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,MAAZ;AAAmB,IAAA,MAAM,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,MAAM,EAAEJ,MAAM,KAAK,KAFrB;AAGE,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,QADN,EAUM,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,MAAM,EAAED,MAAM,KAAK,QAFrB;AAGE,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,QAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,SAVN,EAmBM,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,MAAM,EAAED,MAAM,KAAK,MAFrB;AAGE,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,MAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,SAnBN,CADA,CArCA,EAoEID,MAAM,KAAK,MAAX,GAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAIA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxEJ,CADF;AA8ED,CAxFD;;AA0FA,eAAeJ,IAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\nimport { Button, Grid, Input, Icon, Form, List,\n   Modal, Header, Message, Popup, Select, Radio,\n   Tab, TextArea, Loader, Menu } from 'semantic-ui-react';\nimport Send from './Send';\nimport Sell from './Sell';\nimport PactContext from \"../contexts/PactContext\";\n\nconst User = () => {\n\n  const pactContext = useContext(PactContext);\n\n  const pactFecth = async () => {\n    await pactContext.getCoinBalance();\n  }\n\n  const [action, setAction] = useState('send')\n\n  return (\n    <div style={{}}>\n    <Form>\n      <Form.Field  style={{marginLeft: 50, marginRight: 50, marginTop: \"20px\", marginBottom: 30, textAlign: \"left\"}} >\n        <label style={{color: \"#054F9E\" }}>Enter Your Public Key\n          <Popup\n            trigger={\n              <Icon name='help circle' style={{\"marginLeft\": \"2px\"}}/>\n            }\n            position='top center'\n          >\n          <Popup.Header>What is a Public Key? </Popup.Header>\n          <Popup.Content>Account Name is the unique sequence of characters that you use to identify yourself in chainweb. You'll be asked to sign with associated key/keys when you make transactions. Account names need to be unique and are assosciated to keypairs that can sign its transactions. The simplest way would be to use your public key as your account name</Popup.Content>\n          </Popup>\n        </label>\n          <Form.Input\n            icon='key'\n            iconPosition='left'\n            placeholder='Account Name'\n            value={pactContext.accountName}\n            onChange={(e) => pactContext.setAccountName(e.target.value)}\n            action={\n               <Button\n               color='grey'\n               onClick={() => pactContext.getCoinBalance()}\n               >\n                <Icon name=\"redo\"/>\n                refresh\n               </Button>\n             }\n          />\n      </Form.Field>\n    </Form>\n    <Message color=\"blue\" style={{marginLeft: 100, marginRight: 100, textAlign:'center'}}>\n      <Message.Header>\n        Balance: {pactContext.coinBalance} STX\n      </Message.Header>\n    </Message>\n    <div style={{marginLeft: 50, marginRight: 50, marginTop: 40}}>\n    <Menu color=\"blue\" widths={3} >\n          <Menu.Item\n            name='buy'\n            active={action === 'buy'}\n            onClick={() => setAction('buy')}\n          >\n            <Icon name='cart arrow down' />\n            Buy\n          </Menu.Item>\n\n          <Menu.Item\n            name='redeem'\n            active={action === 'redeem'}\n            onClick={() => setAction('redeem')}\n          >\n            <Icon name='arrow right' />\n            Sell\n          </Menu.Item>\n\n          <Menu.Item\n            name='send'\n            active={action === 'send'}\n            onClick={() => setAction('send')}\n          >\n            <Icon name='exchange' />\n            Send\n          </Menu.Item>\n\n        </Menu>\n      </div>\n      {(action === 'send'\n      ?\n        <Send />\n      :\n        <Sell />\n      )}\n    </div>\n  );\n\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}