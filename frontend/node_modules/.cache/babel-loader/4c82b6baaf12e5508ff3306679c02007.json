{"ast":null,"code":"/**\nFRONTEND CONFIG for blockchain calls to kadena chainweb\nuse frontend radio button to toggle testnet / mainnet\n(backend and contract config ../../pact/config.js)\n**/\n//networkId\nvar networkIdTN = \"testnet04\";\nvar networkIdMN = \"mainnet01\"; //chainweb node\n\nvar nodeTN = 'us1.testnet';\nvar nodeMN = 'us-e1'; //target chain for contract\n\nvar chainId = \"3\"; //api host to send requests\n\nvar hostTN = \"https://\".concat(nodeTN, \".chainweb.com/chainweb/0.0/\").concat(networkIdTN, \"/chain/\").concat(chainId, \"/pact\"); //api host to send requests\n\nvar hostMN = \"https://\".concat(nodeMN, \".chainweb.com/chainweb/0.0/\").concat(networkIdMN, \"/chain/\").concat(chainId, \"/pact\"); //creation time for request\n\nvar creationTime = () => Math.round(new Date().getTime() / 1000) - 15; //meta data for blockchian transaction on kadena chainweb\n\n\nvar meta = {\n  testnet: {\n    networkId: networkIdTN,\n    chainId: chainId,\n    host: hostTN,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //gas payer of the transaction\n    //  set to our gas station account defined in st-gas-station.pact\n    sender: \"Digital Peso-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\"\n  },\n  mainnet: {\n    networkId: networkIdMN,\n    chainId: chainId,\n    host: hostMN,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //gas payer of the transaction\n    //  set to our gas station account defined in st-gas-station.pact\n    sender: \"Digital Peso-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\"\n  }\n};\nmodule.exports = {\n  meta: meta\n};","map":{"version":3,"sources":["/Users/francescomelpignano/Desktop/kadena/code/peso-stablecoin/frontend/src/var/config.js"],"names":["networkIdTN","networkIdMN","nodeTN","nodeMN","chainId","hostTN","hostMN","creationTime","Math","round","Date","getTime","meta","testnet","networkId","host","gasPrice","gasLimit","ttl","sender","nonce","mainnet","module","exports"],"mappings":"AAAA;;;;;AAMA;AACA,IAAIA,WAAW,GAAG,WAAlB;AACA,IAAIC,WAAW,GAAG,WAAlB,C,CAEA;;AACA,IAAIC,MAAM,GAAG,aAAb;AACA,IAAIC,MAAM,GAAG,OAAb,C,CAEA;;AACA,IAAIC,OAAO,GAAG,GAAd,C,CAEA;;AACA,IAAIC,MAAM,qBAAcH,MAAd,wCAAkDF,WAAlD,oBAAuEI,OAAvE,UAAV,C,CACA;;AACA,IAAIE,MAAM,qBAAcH,MAAd,wCAAkDF,WAAlD,oBAAuEG,OAAvE,UAAV,C,CAEA;;AACA,IAAIG,YAAY,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAY,IAAIC,IAAJ,EAAD,CAAWC,OAAX,KAAqB,IAAhC,IAAsC,EAA/D,C,CAGA;;;AACA,IAAIC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAEd,WADJ;AAEPI,IAAAA,OAAO,EAAEA,OAFF;AAGPW,IAAAA,IAAI,EAAEV,MAHC;AAIPE,IAAAA,YAAY,EAAEA,YAJP;AAKP;AACAS,IAAAA,QAAQ,EAAE,aANH;AAOP;AACAC,IAAAA,QAAQ,EAAE,KARH;AASP;AACAC,IAAAA,GAAG,EAAE,KAVE;AAWP;AACA;AACAC,IAAAA,MAAM,EAAE,uBAbD;AAcP;AACAC,IAAAA,KAAK,EAAE;AAfA,GADA;AAkBTC,EAAAA,OAAO,EAAE;AACPP,IAAAA,SAAS,EAAEb,WADJ;AAEPG,IAAAA,OAAO,EAAEA,OAFF;AAGPW,IAAAA,IAAI,EAAET,MAHC;AAIPC,IAAAA,YAAY,EAAEA,YAJP;AAKP;AACAS,IAAAA,QAAQ,EAAE,aANH;AAOP;AACAC,IAAAA,QAAQ,EAAE,KARH;AASP;AACAC,IAAAA,GAAG,EAAE,KAVE;AAWP;AACA;AACAC,IAAAA,MAAM,EAAE,uBAbD;AAcP;AACAC,IAAAA,KAAK,EAAE;AAfA;AAlBA,CAAX;AAqCAE,MAAM,CAACC,OAAP,GAAiB;AACfX,EAAAA,IAAI,EAAEA;AADS,CAAjB","sourcesContent":["/**\nFRONTEND CONFIG for blockchain calls to kadena chainweb\nuse frontend radio button to toggle testnet / mainnet\n(backend and contract config ../../pact/config.js)\n**/\n\n//networkId\nvar networkIdTN = \"testnet04\"\nvar networkIdMN = \"mainnet01\"\n\n//chainweb node\nvar nodeTN = 'us1.testnet'\nvar nodeMN = 'us-e1'\n\n//target chain for contract\nvar chainId = \"3\"\n\n//api host to send requests\nvar hostTN = `https://${nodeTN}.chainweb.com/chainweb/0.0/${networkIdTN}/chain/${chainId}/pact`\n//api host to send requests\nvar hostMN = `https://${nodeMN}.chainweb.com/chainweb/0.0/${networkIdMN}/chain/${chainId}/pact`\n\n//creation time for request\nvar creationTime = () => Math.round((new Date).getTime()/1000)-15\n\n\n//meta data for blockchian transaction on kadena chainweb\nvar meta = {\n  testnet: {\n    networkId: networkIdTN,\n    chainId: chainId,\n    host: hostTN,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //gas payer of the transaction\n    //  set to our gas station account defined in st-gas-station.pact\n    sender: \"Digital Peso-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  },\n  mainnet: {\n    networkId: networkIdMN,\n    chainId: chainId,\n    host: hostMN,\n    creationTime: creationTime,\n    //gas price at lowest possible denomination\n    gasPrice: 0.00000000001,\n    //high gas limit for tx\n    gasLimit: 10000,\n    //time a tx lives in mempool since creationTime\n    ttl: 28800,\n    //gas payer of the transaction\n    //  set to our gas station account defined in st-gas-station.pact\n    sender: \"Digital Peso-free-gas\",\n    //nonce here doesnt matter since the tx will never have the same hash\n    nonce: \"some nonce that doesnt matter\",\n  }\n}\n\nmodule.exports = {\n  meta: meta\n}\n"]},"metadata":{},"sourceType":"module"}